C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          #include "Key.h"
   4          #include "DS1302.h"
   5          #include "LCD1602.h"
   6          #include "Time.h"
   7          
   8          unsigned char KeyNum, MODE, TimeSetSelect, TimeSetFlashFlag;  //键值 模式值 时间位 时间闪烁标
             -志位
   9          
  10          //闹钟值定义
  11          unsigned char clock[5]; //年月日 时分秒
  12          char Alarm;             //是否有闹钟
  13          int CheakFlag;          //判断标志位
  14          sbit FMQ = P2^5;        //定义蜂鸣器引脚
  15          
  16          //秒表
  17          struct StopTime
  18          {
  19              unsigned char StopHour;     //时
  20              unsigned char StopMinute;   //分
  21              unsigned char StopSecond_0; //秒
  22              unsigned char StopSecond_1; //十分秒
  23              unsigned char StopSecond_2; //百分秒
  24          };
  25          struct StopTime NowTime;            //秒表实时时间
  26          struct StopTime StopTimeArray[10];  //回看值
  27          unsigned char StopTimeNum;          //回看值数
  28          unsigned char StopTimeNumSelect;    //回看值位
  29          unsigned char StopCount;            //秒表中断计数器
  30          unsigned char StopWatchFlag;        //秒表显示标记位
  31          unsigned char StopTimeFlag;         //显示内容(实时/回看)标记位
  32          unsigned char StopWatchAddFlag;     //秒表累计状态位
  33          
  34          /* MODE.JSON
  35          {
  36              "Name":"MODE",
  37              "MODE":{
  38                  "0":"TimeShow",
  39                  "1":"TimeSet",
  40                  "2":"AlarmSet",
  41                  "3":"StopWatch"
  42              }
  43          }
  44          */
  45          
  46          //函数声明部分
  47          void ClearStopNum();                //清除秒表存储
  48          void FMQBeep(unsigned int time);    //蜂鸣器发声
  49          int Cheak();                        //检测闹钟时间是否达到
  50          
  51          void TimeShow() //MODE 0 显示时间
  52          {
  53   1          DS1302_ReadTime();
C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 2   

  54   1          LCD_ShowNum(1,1,DS1302_Time[0],2);
  55   1          LCD_ShowNum(1,4,DS1302_Time[1],2);
  56   1          LCD_ShowNum(1,7,DS1302_Time[2],2);
  57   1          LCD_ShowNum(2,1,DS1302_Time[3],2);
  58   1          LCD_ShowNum(2,4,DS1302_Time[4],2);
  59   1          LCD_ShowNum(2,7,DS1302_Time[5],2);
  60   1      }
  61          
  62          void TimeSet()  //MODE 1 设置时间
  63          {
  64   1          if(KeyNum == 2)
  65   1          {
  66   2              TimeSetSelect++;
  67   2              TimeSetSelect %= 6; //越界清零
  68   2          }
  69   1          if(KeyNum == 3)
  70   1          {
  71   2              DS1302_Time[TimeSetSelect]++;
  72   2      
  73   2              //输入合法性判断
  74   2              if(DS1302_Time[0] > 99) {DS1302_Time[0] = 0;}
  75   2              if(DS1302_Time[1] > 12) {DS1302_Time[1] = 1;}
  76   2      
  77   2              if(DS1302_Time[1] == 1 || DS1302_Time[1] == 3 || DS1302_Time[1] == 5 || DS1302_Time[1] == 7 ||
  78   2                 DS1302_Time[1] == 8 || DS1302_Time[1] == 10 || DS1302_Time[1] == 12)
  79   2              {
  80   3                  if(DS1302_Time[2] > 31) {DS1302_Time[2] = 1;}
  81   3              }
  82   2              else if(DS1302_Time[1] == 4 || DS1302_Time[1] == 6 || DS1302_Time[1] == 9 || DS1302_Time[1] == 11)
  83   2              {
  84   3                  if(DS1302_Time[2] > 30) {DS1302_Time[2] = 1;}
  85   3              }
  86   2              else if(DS1302_Time[1] == 2)
  87   2              {
  88   3                  if(DS1302_Time[0] % 4 == 0)
  89   3                  {
  90   4                      if(DS1302_Time[2] > 29) {DS1302_Time[2] = 1;}
  91   4                  }
  92   3                  else
  93   3                  {
  94   4                      if(DS1302_Time[2] > 28) {DS1302_Time[2] = 1;}
  95   4                  }
  96   3              }
  97   2      
  98   2              if(DS1302_Time[3] > 23) {DS1302_Time[3] = 0;}
  99   2              if(DS1302_Time[4] > 59) {DS1302_Time[4] = 0;}
 100   2              if(DS1302_Time[5] > 59) {DS1302_Time[5] = 0;}
 101   2          }
 102   1          if(KeyNum == 4)
 103   1          {
 104   2              DS1302_Time[TimeSetSelect]--;
 105   2      
 106   2              //输入合法性判断
 107   2              if(DS1302_Time[0] < 0) {DS1302_Time[0] = 99;}
 108   2              if(DS1302_Time[1] < 1) {DS1302_Time[1] = 12;}
 109   2      
 110   2              if(DS1302_Time[1] == 1 || DS1302_Time[1] == 3 || DS1302_Time[1] == 5 || DS1302_Time[1] == 7 ||
 111   2                 DS1302_Time[1] == 8 || DS1302_Time[1] == 10 || DS1302_Time[1] == 12)
 112   2              {
 113   3                  if(DS1302_Time[2] < 1) {DS1302_Time[2] = 31;}
 114   3                  if(DS1302_Time[2] > 31) {DS1302_Time[2] = 1;}
 115   3              }
C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 3   

 116   2              else if(DS1302_Time[1] == 4 || DS1302_Time[1] == 6 || DS1302_Time[1] == 9 || DS1302_Time[1] == 11)
 117   2              {
 118   3                  if(DS1302_Time[2] < 1) {DS1302_Time[2] = 30;}
 119   3                  if(DS1302_Time[2] > 30) {DS1302_Time[2] = 1;}
 120   3              }
 121   2              else if(DS1302_Time[1] == 2)
 122   2              {
 123   3                  if(DS1302_Time[0] % 4 == 0)
 124   3                  {
 125   4                      if(DS1302_Time[2] < 1) {DS1302_Time[2] = 29;}
 126   4                      if(DS1302_Time[2] > 29) {DS1302_Time[2] = 1;}
 127   4                  }
 128   3                  else
 129   3                  {
 130   4                      if(DS1302_Time[2] < 1) {DS1302_Time[2] = 28;}
 131   4                      if(DS1302_Time[2] > 28) {DS1302_Time[2] = 1;}
 132   4                  }
 133   3              }
 134   2      
 135   2              if(DS1302_Time[3] < 0) {DS1302_Time[3] = 23;}
 136   2              if(DS1302_Time[4] < 0) {DS1302_Time[4] = 59;}
 137   2              if(DS1302_Time[5] < 0) {DS1302_Time[5] = 59;}
 138   2          }
 139   1          
 140   1          //实时显示，未经过DS1302
 141   1          if(TimeSetSelect == 0 && TimeSetFlashFlag == 1) {LCD_ShowString(1,1,"  ");}
 142   1          else {LCD_ShowNum(1,1,DS1302_Time[0],2);}
 143   1          if(TimeSetSelect == 1 && TimeSetFlashFlag == 1) {LCD_ShowString(1,4,"  ");}
 144   1          else {LCD_ShowNum(1,4,DS1302_Time[1],2);}
 145   1          if(TimeSetSelect == 2 && TimeSetFlashFlag == 1) {LCD_ShowString(1,7,"  ");}
 146   1          else {LCD_ShowNum(1,7,DS1302_Time[2],2);}
 147   1          if(TimeSetSelect == 3 && TimeSetFlashFlag == 1) {LCD_ShowString(2,1,"  ");}
 148   1          else {LCD_ShowNum(2,1,DS1302_Time[3],2);}
 149   1          if(TimeSetSelect == 4 && TimeSetFlashFlag == 1) {LCD_ShowString(2,4,"  ");}
 150   1          else {LCD_ShowNum(2,4,DS1302_Time[4],2);}
 151   1          if(TimeSetSelect == 5 && TimeSetFlashFlag == 1) {LCD_ShowString(2,7,"  ");}
 152   1          else {LCD_ShowNum(2,7,DS1302_Time[5],2);}
 153   1          
 154   1          //LCD_ShowNum(2,10,TimeSetSelect,2);
 155   1      }
 156          
 157          void AlarmSet() //MODE 2 设置闹钟
 158          {
 159   1          //设置闹钟时间
 160   1          if(KeyNum == 2)
 161   1          {
 162   2              if(!Alarm)
 163   2              {
 164   3                  Alarm = 1;  //有闹钟
 165   3      
 166   3                  //赋值clock
 167   3                  clock[0] = DS1302_Time[0];
 168   3                  clock[1] = DS1302_Time[1];
 169   3                  clock[2] = DS1302_Time[2];
 170   3                  clock[3] = DS1302_Time[3];
 171   3                  clock[4] = DS1302_Time[4];
 172   3                  clock[5] = DS1302_Time[5];
 173   3              }
 174   2              else
 175   2              {
 176   3                  TimeSetSelect++;
 177   3                  TimeSetSelect %= 6;
C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 4   

 178   3              }
 179   2          }
 180   1          if(KeyNum == 3)
 181   1          {
 182   2              clock[TimeSetSelect]++;
 183   2      
 184   2              //输入合法性一般判断
 185   2              if(clock[0] > 99) {clock[0] = 0;}
 186   2              if(clock[1] > 12) {clock[1] = 1;}
 187   2      
 188   2              if(clock[1] == 1 || clock[1] == 3 || clock[1] == 5 || clock[1] == 7 ||
 189   2                 clock[1] == 8 || clock[1] == 10 || clock[1] == 12)
 190   2              {
 191   3                  if(clock[2] > 31) {clock[2] = 1;}
 192   3              }
 193   2              else if(clock[1] == 4 || clock[1] == 6 || clock[1] == 9 || clock[1] == 11)
 194   2              {
 195   3                  if(clock[2] > 30) {clock[2] = 1;}
 196   3              }
 197   2              else if(clock[1] == 2)
 198   2              {
 199   3                  if(clock[0] % 4 == 0)
 200   3                  {
 201   4                      if(clock[2] > 29) {clock[2] = 1;}
 202   4                  }
 203   3                  else
 204   3                  {
 205   4                      if(clock[2] > 28) {clock[2] = 1;}
 206   4                  }
 207   3              }
 208   2      
 209   2              if(clock[3] > 23) {clock[3] = 0;}
 210   2              if(clock[4] > 59) {clock[4] = 0;}
 211   2              if(clock[5] > 59) {clock[5] = 0;}
 212   2      
 213   2              //闹钟时间边界判断
 214   2              if(clock[0] < DS1302_Time[0])
 215   2              {clock[0] = DS1302_Time[0];}
 216   2      
 217   2              if(clock[0] == DS1302_Time[0] && clock[1] < DS1302_Time[1])
 218   2              {clock[1] = DS1302_Time[1];}
 219   2      
 220   2              if(clock[0] == DS1302_Time[0] && clock[1] == DS1302_Time[1] &&
 221   2                 clock[2] < DS1302_Time[2])
 222   2              {clock[2] = DS1302_Time[2];}
 223   2      
 224   2              if(clock[0] == DS1302_Time[0] && clock[1] == DS1302_Time[1] &&
 225   2                 clock[2] == DS1302_Time[2] && clock[3] < DS1302_Time[3])
 226   2              {clock[3] = DS1302_Time[3];}
 227   2      
 228   2              if(clock[0] == DS1302_Time[0] && clock[1] == DS1302_Time[1] &&
 229   2                 clock[2] == DS1302_Time[2] && clock[3] == DS1302_Time[3] &&
 230   2                 clock[4] < DS1302_Time[4])
 231   2              {clock[4] = DS1302_Time[4];}
 232   2      
 233   2              if(clock[0] == DS1302_Time[0] && clock[1] == DS1302_Time[1] &&
 234   2                 clock[2] == DS1302_Time[2] && clock[3] == DS1302_Time[3] &&
 235   2                 clock[4] == DS1302_Time[4] && clock[5] < DS1302_Time[5])
 236   2              {clock[5] = DS1302_Time[5];}
 237   2          }
 238   1          if(KeyNum == 4)
 239   1          {
C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 5   

 240   2              clock[TimeSetSelect]--;       
 241   2      
 242   2              //一般边界判断
 243   2              if(clock[0] < 0) {clock[0] = 99;}
 244   2              if(clock[1] < 1) {clock[1] = 12;}
 245   2      
 246   2              if(clock[1] == 1 || clock[1] == 3 || clock[1] == 5 || clock[1] == 7 ||
 247   2                 clock[1] == 8 || clock[1] == 10 || clock[1] == 12)
 248   2              {
 249   3                  if(clock[2] < 1) {clock[2] = 31;}
 250   3                  if(clock[2] > 31) {clock[2] = 1;}
 251   3              }
 252   2              else if(clock[1] == 4 || clock[1] == 6 || clock[1] == 9 || clock[1] == 11)
 253   2              {
 254   3                  if(clock[2] < 1) {clock[2] = 30;}
 255   3                  if(clock[2] > 30) {clock[2] = 1;}
 256   3              }
 257   2              else if(clock[1] == 2)
 258   2              {
 259   3                  if(clock[0] % 4 == 0)
 260   3                  {
 261   4                      if(clock[2] < 1) {clock[2] = 29;}
 262   4                      if(clock[2] > 29) {clock[2] = 1;}
 263   4                  }
 264   3                  else
 265   3                  {
 266   4                      if(clock[2] < 1) {clock[2] = 28;}
 267   4                      if(clock[2] > 28) {clock[2] = 1;}
 268   4                  }
 269   3              }
 270   2      
 271   2              if(clock[3] < 0) {clock[3] = 23;}
 272   2              if(clock[4] < 0) {clock[4] = 59;}
 273   2              if(clock[5] < 0) {clock[5] = 59;} 
 274   2          
 275   2      
 276   2              //闹钟时间边界判断
 277   2              if(clock[0] < DS1302_Time[0])
 278   2              {clock[0] = DS1302_Time[0];}
 279   2      
 280   2              if(clock[0] == DS1302_Time[0] && clock[1] < DS1302_Time[1])
 281   2              {clock[1] = DS1302_Time[1];}
 282   2      
 283   2              if(clock[0] == DS1302_Time[0] && clock[1] == DS1302_Time[1] &&
 284   2                 clock[2] < DS1302_Time[2])
 285   2              {clock[2] = DS1302_Time[2];}
 286   2      
 287   2              if(clock[0] == DS1302_Time[0] && clock[1] == DS1302_Time[1] &&
 288   2                 clock[2] == DS1302_Time[2] && clock[3] < DS1302_Time[3])
 289   2              {clock[3] = DS1302_Time[3];}
 290   2      
 291   2              if(clock[0] == DS1302_Time[0] && clock[1] == DS1302_Time[1] &&
 292   2                 clock[2] == DS1302_Time[2] && clock[3] == DS1302_Time[3] &&
 293   2                 clock[4] < DS1302_Time[4])
 294   2              {clock[4] = DS1302_Time[4];}
 295   2      
 296   2              if(clock[0] == DS1302_Time[0] && clock[1] == DS1302_Time[1] &&
 297   2                 clock[2] == DS1302_Time[2] && clock[3] == DS1302_Time[3] &&
 298   2                 clock[4] == DS1302_Time[4] && clock[5] < DS1302_Time[5])
 299   2              {clock[5] = DS1302_Time[5];}
 300   2          }
 301   1      
C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 6   

 302   1          if(Alarm)   //进入闹钟设置，开始闪烁
 303   1          {
 304   2          //闹钟时间实时显示，已写入 clock[]
 305   2          if(TimeSetSelect == 0 && TimeSetFlashFlag == 1) {LCD_ShowString(1,1,"  ");}
 306   2          else {LCD_ShowNum(1,1,clock[0],2);}
 307   2          if(TimeSetSelect == 1 && TimeSetFlashFlag == 1) {LCD_ShowString(1,4,"  ");}
 308   2          else {LCD_ShowNum(1,4,clock[1],2);}
 309   2          if(TimeSetSelect == 2 && TimeSetFlashFlag == 1) {LCD_ShowString(1,7,"  ");}
 310   2          else {LCD_ShowNum(1,7,clock[2],2);}
 311   2          if(TimeSetSelect == 3 && TimeSetFlashFlag == 1) {LCD_ShowString(2,1,"  ");}
 312   2          else {LCD_ShowNum(2,1,clock[3],2);}
 313   2          if(TimeSetSelect == 4 && TimeSetFlashFlag == 1) {LCD_ShowString(2,4,"  ");}
 314   2          else {LCD_ShowNum(2,4,clock[4],2);}
 315   2          if(TimeSetSelect == 5 && TimeSetFlashFlag == 1) {LCD_ShowString(2,7,"  ");}
 316   2          else {LCD_ShowNum(2,7,clock[5],2);}
 317   2          }
 318   1      }
 319          
 320          void StopWatch()    //MODE 3 秒表
 321          {
 322   1          if(KeyNum == 2) //开始计时(清零并重新计时)
 323   1          {
 324   2              //清空实时时间
 325   2              NowTime.StopHour = 0;
 326   2              NowTime.StopMinute = 0;
 327   2              NowTime.StopSecond_0 = 0;
 328   2              NowTime.StopSecond_1 = 0;
 329   2              NowTime.StopSecond_2 = 0;
 330   2      
 331   2              //清空 回看记录 回看值 回看选择位
 332   2              ClearStopNum();
 333   2      
 334   2              //初始化状态
 335   2              StopWatchFlag = 1;
 336   2              StopTimeFlag = 0;
 337   2              StopWatchAddFlag = 1;
 338   2          }
 339   1          if(KeyNum == 3) //暂停/运行
 340   1          {
 341   2              StopWatchAddFlag = !StopWatchAddFlag;
 342   2          }
 343   1          if(KeyNum == 4) //运行/添加回看  暂停/回看列表 无记录不回看
 344   1          {
 345   2              if(StopWatchAddFlag)
 346   2              {
 347   3                  if(StopTimeNum < 10)
 348   3                  {
 349   4                      //写入回看值数组
 350   4                      StopTimeArray[StopTimeNum].StopHour = NowTime.StopHour;
 351   4                      StopTimeArray[StopTimeNum].StopMinute = NowTime.StopMinute;
 352   4                      StopTimeArray[StopTimeNum].StopSecond_0 = NowTime.StopSecond_0;
 353   4                      StopTimeArray[StopTimeNum].StopSecond_1 = NowTime.StopSecond_1;
 354   4                      StopTimeArray[StopTimeNum].StopSecond_2 = NowTime.StopSecond_2;
 355   4      
 356   4                      StopTimeNum++;
 357   4                  }
 358   3              }
 359   2              else{
 360   3                  if(StopTimeNum > 0)
 361   3                  {
 362   4                      if(StopTimeFlag == 0)   {StopTimeFlag = 1;}
 363   4                      else if(StopTimeNumSelect == (StopTimeNum - 1))
C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 7   

 364   4                      {
 365   5                          StopTimeNumSelect = 0;
 366   5                          StopTimeFlag = 0;
 367   5                      } 
 368   4                      else    {StopTimeNumSelect++;}
 369   4                  }
 370   3              }
 371   2          }
 372   1          //进入累积前，清空StopCount
 373   1          if(!StopWatchAddFlag)
 374   1          {StopCount = 0;}
 375   1          
 376   1          //秒表累积
 377   1          if(StopWatchAddFlag)
 378   1          {
 379   2              NowTime.StopSecond_2 += StopCount;
 380   2              StopCount = 0;
 381   2      
 382   2              if(NowTime.StopSecond_2 > 9)
 383   2              {
 384   3                  NowTime.StopSecond_2 = (NowTime.StopSecond_2 - 10);
 385   3                  NowTime.StopSecond_1++;
 386   3      
 387   3                  if(NowTime.StopSecond_1 == 10)
 388   3                  {
 389   4                      NowTime.StopSecond_1 = 0;
 390   4                      NowTime.StopSecond_0++;
 391   4      
 392   4                      if(NowTime.StopSecond_0 == 60)
 393   4                      {
 394   5                          NowTime.StopSecond_0 = 0;
 395   5                          NowTime.StopMinute++;
 396   5      
 397   5                          if(NowTime.StopMinute == 60)
 398   5                          {
 399   6                              NowTime.StopMinute = 0;
 400   6                              NowTime.StopHour++;
 401   6      
 402   6                              if(NowTime.StopHour == 100)
 403   6                              {
 404   7                                  //显示超出边界
 405   7                              }
 406   6                          }
 407   5                      }
 408   4                  }
 409   3              }
 410   2          }
 411   1      
 412   1          //实时显示 时分秒/10/100
 413   1          if(StopWatchFlag)
 414   1          {
 415   2              if(StopTimeFlag)    //回看显示
 416   2              {
 417   3                  LCD_ShowNum(1,1,StopTimeArray[StopTimeNumSelect].StopHour,2);
 418   3                  LCD_ShowNum(1,4,StopTimeArray[StopTimeNumSelect].StopMinute,2);
 419   3                  LCD_ShowNum(2,1,StopTimeArray[StopTimeNumSelect].StopSecond_0,2);
 420   3                  LCD_ShowNum(2,4,StopTimeArray[StopTimeNumSelect].StopSecond_1,1);
 421   3                  LCD_ShowNum(2,5,StopTimeArray[StopTimeNumSelect].StopSecond_2,1);
 422   3      
 423   3                  //显示回看选择位
 424   3                  LCD_ShowString(2,7,"T");
 425   3                  LCD_ShowNum(2,8,StopTimeNumSelect,1);
C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 8   

 426   3              }
 427   2              else    //实时显示
 428   2              {
 429   3                  LCD_ShowNum(1,1,NowTime.StopHour,2);
 430   3                  LCD_ShowNum(1,4,NowTime.StopMinute,2);
 431   3                  LCD_ShowNum(2,1,NowTime.StopSecond_0,2);
 432   3                  LCD_ShowNum(2,4,NowTime.StopSecond_1,1);
 433   3                  LCD_ShowNum(2,5,NowTime.StopSecond_2,1);
 434   3      
 435   3                  //清空回看选择位
 436   3                  LCD_ShowString(2,7,"  ");
 437   3              }
 438   2          }
 439   1      }
 440          
 441          void main()
 442          {
 443   1          //初始化定时器
 444   1          Timer0_Init();
 445   1          Timer2_Init();
 446   1      
 447   1          //初始化时钟模块
 448   1          DS1302_Init();
 449   1          DS1302_SetTime();
 450   1      
 451   1          //初始化LCD模块
 452   1          LCD_Init();
 453   1          LCD_ShowString(1,1,"  -  -   MODE");
 454   1          LCD_ShowString(2,1,"  :  :   SHOW");
 455   1      
 456   1          while(1)
 457   1          {
 458   2              //change MODE
 459   2              KeyNum = Key();
 460   2              if(KeyNum == 1)
 461   2              {
 462   3                  if(MODE == 0){
 463   4                      MODE = 1;   //进入 TimeSet
 464   4      
 465   4                      //初始化模式显示
 466   4                      LCD_ShowString(1,1,"  -  -   MODE");
 467   4                      LCD_ShowString(2,1,"  :  :   SET ");
 468   4      
 469   4                      //初始化时间位
 470   4                      TimeSetSelect = 0;
 471   4                  }
 472   3                  else if(MODE == 1){
 473   4                      MODE = 2;   //进入 AlarmSet
 474   4                      
 475   4                      //将新设置的时间写入DS1302
 476   4                      DS1302_SetTime();
 477   4      
 478   4                      //初始化模式显示
 479   4                      LCD_ShowString(1,1,"  -  -   MODE");
 480   4                      LCD_ShowString(2,1,"  :  :   ALARM");
 481   4      
 482   4                      //初始化数字显示
 483   4                      LCD_ShowNum(1,1,DS1302_Time[0],2);
 484   4                      LCD_ShowNum(1,4,DS1302_Time[1],2);
 485   4                      LCD_ShowNum(1,7,DS1302_Time[2],2);
 486   4                      LCD_ShowNum(2,1,DS1302_Time[3],2);
 487   4                      LCD_ShowNum(2,4,DS1302_Time[4],2);
C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 9   

 488   4                      LCD_ShowNum(2,7,DS1302_Time[5],2);
 489   4      
 490   4                      //初始化时间位
 491   4                      TimeSetSelect = 0;    
 492   4                  }
 493   3                  else if (MODE == 2){
 494   4                      MODE = 3;   //进入 StopWatch
 495   4      
 496   4                      //初始化模式显示
 497   4                      LCD_ShowString(1,1,"00:00    MODE");
 498   4                      LCD_ShowString(2,1,"00.00    S-W  ");
 499   4                  }
 500   3                  else if (MODE == 3){
 501   4                      MODE = 0;   //进入 TimeShow
 502   4      
 503   4                      //初始化模式显示
 504   4                      LCD_ShowString(1,1,"  -  -   MODE");
 505   4                      LCD_ShowString(2,1,"  :  :   SHOW");
 506   4      
 507   4                      //清零秒表模式
 508   4                      StopWatchFlag = 0;
 509   4                  }
 510   3              }
 511   2      
 512   2              //闹钟检测
 513   2              CheakFlag = Cheak();
 514   2              if(CheakFlag && Alarm && (MODE == 0))
 515   2              {
 516   3                  CheakFlag = 0;
 517   3                  Alarm = 0;
 518   3      
 519   3                  LCD_ShowString(1,1,"  -  -   MODE");
 520   3                  LCD_ShowString(2,1,"  :  :   BELL ");
 521   3      
 522   3                  LCD_ShowNum(1,1,clock[0],2);
 523   3                  LCD_ShowNum(1,4,clock[1],2);
 524   3                  LCD_ShowNum(1,7,clock[2],2);
 525   3                  LCD_ShowNum(2,1,clock[3],2);
 526   3                  LCD_ShowNum(2,4,clock[4],2);
 527   3                  LCD_ShowNum(2,7,clock[5],2);
 528   3      
 529   3                  FMQBeep(1500);
 530   3      
 531   3                  MODE = 0;   //进入 TimeShow
 532   3                  //初始化模式显示
 533   3                  LCD_ShowString(1,1,"  -  -   MODE");
 534   3                  LCD_ShowString(2,1,"  :  :   SHOW ");
 535   3                  //清零秒表模式
 536   3                  StopWatchFlag = 0;
 537   3              }
 538   2              
 539   2              //MODE 显示
 540   2              switch(MODE)
 541   2              {
 542   3                  case 0: TimeShow(); break;
 543   3                  case 1: TimeSet();  break;
 544   3                  case 2: AlarmSet(); break;
 545   3                  case 3: StopWatch();break;
 546   3              }
 547   2          }
 548   1      }
 549          
C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 10  

 550          //中断部分
 551          void Timer0_ISR(void) interrupt 1 
 552          {
 553   1          static unsigned int T0Count;
 554   1      
 555   1          TH0 = 0xFC;        
 556   1          TL0 = 0x67;
 557   1          
 558   1          T0Count++;
 559   1          if(T0Count >= 500)
 560   1          {
 561   2              T0Count = 0;
 562   2              //中断内容
 563   2              TimeSetFlashFlag = !TimeSetFlashFlag;   //控制时间闪烁
 564   2          }
 565   1      }
 566          
 567          void Timer1_ISR(void) interrupt 3 
 568          {
 569   1          TH1 = 0xFC;        
 570   1          TL1 = 0x67;
 571   1          
 572   1          FMQ = !FMQ;
 573   1      }
 574          
 575          void Timer2_ISR(void) interrupt 5 
 576          {
 577   1          static unsigned int T1Count;
 578   1          TF2 = 0;           
 579   1       
 580   1          T1Count++;
 581   1          if(T1Count >= 10)
 582   1          {
 583   2              T1Count = 0;
 584   2              StopCount++;
 585   2          }
 586   1      }
 587          
 588          //函数定义部分
 589          void ClearStopNum()
 590          {
 591   1              unsigned char i;
 592   1              
 593   1          StopTimeNum = 0;
 594   1          StopTimeNumSelect = 0;
 595   1      
 596   1          for(i = 0; i < 10; i++)
 597   1          {
 598   2              StopTimeArray[i].StopHour = 0;
 599   2              StopTimeArray[i].StopMinute = 0;
 600   2              StopTimeArray[i].StopSecond_0 = 0;
 601   2              StopTimeArray[i].StopSecond_1 = 0;
 602   2              StopTimeArray[i].StopSecond_2 = 0;
 603   2          }
 604   1      }
 605          
 606          void FMQBeep(unsigned int time)
 607          {
 608   1          Timer1_Init();
 609   1      
 610   1          Delay(time);
 611   1      
C51 COMPILER V9.54   MAIN                                                                  06/08/2025 18:16:18 PAGE 11  

 612   1          TR1 = 0;
 613   1          FMQ = 0;
 614   1      }
 615          
 616          int Cheak()
 617          {
 618   1          DS1302_ReadTime();
 619   1          if(DS1302_Time[0] == clock[0] && DS1302_Time[1] == clock[1] &&
 620   1             DS1302_Time[2] == clock[2] && DS1302_Time[3] == clock[3] &&
 621   1             DS1302_Time[4] == clock[4] && DS1302_Time[5] == clock[5])
 622   1          {return 1;}
 623   1          else
 624   1          {return 0;}
 625   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3166    ----
   CONSTANT SIZE    =    121    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     77       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
